generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?   @db.VarChar(255)
  email         String    @unique @db.VarChar(100)
  emailVerified DateTime? @map("email_verified")
  password      String?   @db.VarChar(255)
  role          Role      @default(DONOR)
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt

  @@map("users")
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String   @db.VarChar(100)
  token      String   @unique @db.VarChar(100)
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model DonorVerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String   @db.VarChar(100)
  token      String   @unique @db.VarChar(100)
  expires    DateTime

  @@unique([identifier, token])
  @@map("donor_verification_tokens")
}

model PasswordResetToken {
  id         Int      @id @default(autoincrement())
  identifier String   @db.VarChar(100)
  token      String   @unique @db.VarChar(100)
  expires    DateTime

  @@unique([identifier, token])
  @@map("password_reset_tokens")
}

model Organization {
  id            Int                @id @default(autoincrement())
  name          String             @db.VarChar(255)
  email         String             @unique @db.VarChar(100)
  password      String?            @db.VarChar(255)
  imageUrl      String?            @db.VarChar(500)
  phone         String?            @db.VarChar(50)
  company       String?            @db.VarChar(255)
  address       String?            @db.VarChar(500)
  website       String?            @db.VarChar(255)
  city          String?            @db.VarChar(100)
  state         String?            @db.VarChar(100)
  country       String?            @db.VarChar(100)
  postalCode    String?            @db.VarChar(20)
  ghlId         String?            @db.VarChar(100)
  balance       Float              @default(0)
  status        Boolean            @default(true)
  created_at    DateTime           @default(now())
  updated_at    DateTime           @updatedAt
  orgPassword   String?            @db.VarChar(255)
  transactions  DonorTransaction[] @relation("OrganizationTransactions")
  donors        Donor[]
  fundTransfers FundTransfer[]     @relation("OrganizationFundTransfers")
  ghlAccounts   GHLAccount[]       @relation("OrganizationGHLAccounts")
  saveTrRecords SaveTrRecord[]     @relation("OrganizationTransactions")
  subscriptions Subscription[]     @relation("OrganizationSubscriptions")
  plaidConnections PlaidConnection[]

  @@map("organizations")
}

model Donor {
  id              Int                @id @default(autoincrement())
  email           String             @unique @db.VarChar(100)
  password        String             @db.VarChar(255)
  name            String             @db.VarChar(255)
  phone           String?            @db.VarChar(50)
  city            String?            @db.VarChar(100)
  address         String?            @db.VarChar(500)
  imageUrl        String?            @db.VarChar(500)
  status          Boolean            @default(true)
  created_at      DateTime           @default(now())
  updated_at      DateTime           @updatedAt
  organization_id Int
  postal_code     String?            @db.VarChar(20)
  transactions    DonorTransaction[] @relation("DonorTransactions")
  organization    Organization       @relation(fields: [organization_id], references: [id])
  saveTrRecords   SaveTrRecord[]     @relation("DonorTransactions")
  subscriptions   Subscription[]     @relation("DonorSubscriptions")
  plaidConnections PlaidConnection[]

  @@index([organization_id], map: "donors_organization_id_fkey")
  @@map("donors")
}

model DonorTransaction {
  id               Int          @id @default(autoincrement())
  donor_id         Int
  organization_id  Int
  status           String       @db.VarChar(50)
  amount           Float
  currency         String       @db.VarChar(3)
  receipt_url      String?      @db.VarChar(500)
  trnx_id          String       @unique @db.VarChar(100)
  transaction_type String       @db.VarChar(50)
  payment_method   String       @db.VarChar(50)
  created_at       DateTime     @default(now())
  updated_at       DateTime     @updatedAt
  donor            Donor        @relation("DonorTransactions", fields: [donor_id], references: [id])
  organization     Organization @relation("OrganizationTransactions", fields: [organization_id], references: [id])

  @@index([donor_id], map: "donor_transactions_donor_id_fkey")
  @@index([organization_id], map: "donor_transactions_organization_id_fkey")
  @@map("donor_transactions")
}

model FundTransfer {
  id              Int          @id @default(autoincrement())
  trnx_id         String       @unique @db.VarChar(100)
  organization_id Int
  amount          Float
  status          String       @db.VarChar(50)
  receipt_url     String?      @db.VarChar(500)
  transfer_date   DateTime
  transfer_time   String       @db.VarChar(50)
  description     String?      @db.Text
  created_at      DateTime     @default(now())
  updated_at      DateTime     @updatedAt
  organization    Organization @relation("OrganizationFundTransfers", fields: [organization_id], references: [id])

  @@index([organization_id], map: "fund_transfers_organization_id_fkey")
  @@map("fund_transfers")
}

model GHLAccount {
  id              Int          @id @default(autoincrement())
  organization_id Int
  ghl_location_id String       @unique @db.VarChar(100)
  business_name   String       @db.VarChar(255)
  email           String       @db.VarChar(100)
  phone           String?      @db.VarChar(50)
  address         String?      @db.VarChar(500)
  city            String?      @db.VarChar(100)
  state           String?      @db.VarChar(100)
  country         String?      @db.VarChar(100)
  postal_code     String?      @db.VarChar(20)
  website         String?      @db.VarChar(255)
  timezone        String?      @db.VarChar(100)
  ghl_data        String?      @db.Text
  status          String       @default("active") @db.VarChar(50)
  created_at      DateTime     @default(now())
  updated_at      DateTime     @updatedAt
  api_key         String?      @db.Text
  organization    Organization @relation("OrganizationGHLAccounts", fields: [organization_id], references: [id])

  @@index([organization_id], map: "ghl_accounts_organization_id_fkey")
  @@map("ghl_accounts")
}

model SaveTrRecord {
  id                  Int          @id @default(autoincrement())
  trx_id              String       @unique @db.VarChar(100)
  trx_date            DateTime
  trx_amount          Float
  trx_method          String       @db.VarChar(50)
  trx_recipt_url      String?      @db.VarChar(500)
  trx_donor_id        Int
  trx_ghl_id          String?      @db.VarChar(100)
  trx_details         String?      @db.Text
  trx_organization_id Int
  pay_status          String       @default("pending") @db.VarChar(20)
  created_at          DateTime     @default(now())
  updated_at          DateTime     @updatedAt
  donor               Donor        @relation("DonorTransactions", fields: [trx_donor_id], references: [id])
  organization        Organization @relation("OrganizationTransactions", fields: [trx_organization_id], references: [id])

  @@index([trx_ghl_id])
  @@index([trx_donor_id])
  @@index([trx_organization_id])
  @@map("save_tr_record")
}

model Package {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  description String   @db.Text
  price       Float
  currency    String   @default("USD") @db.VarChar(10)
  features    String   @db.Text
  duration    String?  @db.VarChar(100)
  isActive    Boolean  @default(true)
  category    String?  @db.VarChar(100)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  subscriptions Subscription[]

  @@map("packages")
}

model Subscription {
  id                Int                @id @default(autoincrement())
  stripe_subscription_id String         @unique @db.VarChar(255)
  donor_id          Int
  organization_id   Int
  package_id        Int
  status            SubscriptionStatus @default(ACTIVE)
  current_period_start DateTime
  current_period_end   DateTime
  cancel_at_period_end Boolean          @default(false)
  canceled_at       DateTime?
  trial_start       DateTime?
  trial_end         DateTime?
  amount            Float
  currency          String             @default("USD") @db.VarChar(3)
  interval          String             @db.VarChar(20) // month, year, week, day
  interval_count    Int                @default(1)
  metadata          String?            @db.Text
  created_at        DateTime           @default(now())
  updated_at        DateTime           @updatedAt
  
  donor             Donor              @relation("DonorSubscriptions", fields: [donor_id], references: [id])
  organization      Organization       @relation("OrganizationSubscriptions", fields: [organization_id], references: [id])
  package           Package            @relation(fields: [package_id], references: [id])
  subscription_transactions SubscriptionTransaction[]

  @@index([donor_id])
  @@index([organization_id])
  @@index([package_id])
  @@index([status])
  @@map("subscriptions")
}

model SubscriptionTransaction {
  id                Int                @id @default(autoincrement())
  subscription_id   Int
  stripe_invoice_id String             @unique @db.VarChar(255)
  amount            Float
  currency          String             @default("USD") @db.VarChar(3)
  status            String             @db.VarChar(50)
  invoice_url       String?            @db.VarChar(500)
  hosted_invoice_url String?           @db.VarChar(500)
  pdf_url           String?            @db.VarChar(500)
  period_start      DateTime
  period_end        DateTime
  created_at        DateTime           @default(now())
  updated_at        DateTime           @updatedAt
  
  subscription      Subscription       @relation(fields: [subscription_id], references: [id])

  @@index([subscription_id])
  @@index([status])
  @@map("subscription_transactions")
}

model PlaidConnection {
  id                Int      @id @default(autoincrement())
  donor_id          Int
  organization_id   Int
  access_token      String   @unique @db.VarChar(255)
  item_id           String   @unique @db.VarChar(255)
  institution_id    String?  @db.VarChar(255)
  institution_name  String?  @db.VarChar(255)
  accounts          String?  @db.Text
  status            String   @default("ACTIVE") @db.VarChar(50)
  error_message     String?  @db.VarChar(500)
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  
  donor             Donor    @relation(fields: [donor_id], references: [id])
  organization      Organization @relation(fields: [organization_id], references: [id])

  @@index([donor_id])
  @@index([organization_id])
  @@index([status])
  @@map("plaid_connections")
}

enum Role {
  ADMIN
  DONOR
}

enum SubscriptionStatus {
  ACTIVE
  CANCELED
  CANCELED_AT_PERIOD_END
  INCOMPLETE
  INCOMPLETE_EXPIRED
  PAST_DUE
  TRIALING
  UNPAID
}
